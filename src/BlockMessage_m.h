//
// Generated file, do not edit! Created by opp_msgtool 6.0 from BlockMessage.msg.
//

#ifndef __BLOCKMESSAGE_M_H
#define __BLOCKMESSAGE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class BlockMessage;
/**
 * Class generated from <tt>BlockMessage.msg:1</tt> by opp_msgtool.
 * <pre>
 * message BlockMessage
 * {
 *     int blockId;
 *     simtime_t createdAt;
 * }
 * </pre>
 */
class BlockMessage : public ::omnetpp::cMessage
{
  protected:
    int blockId = 0;
    omnetpp::simtime_t createdAt = SIMTIME_ZERO;

  private:
    void copy(const BlockMessage& other);

  protected:
    bool operator==(const BlockMessage&) = delete;

  public:
    BlockMessage(const char *name=nullptr, short kind=0);
    BlockMessage(const BlockMessage& other);
    virtual ~BlockMessage();
    BlockMessage& operator=(const BlockMessage& other);
    virtual BlockMessage *dup() const override {return new BlockMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getBlockId() const;
    virtual void setBlockId(int blockId);

    virtual omnetpp::simtime_t getCreatedAt() const;
    virtual void setCreatedAt(omnetpp::simtime_t createdAt);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const BlockMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, BlockMessage& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline BlockMessage *fromAnyPtr(any_ptr ptr) { return check_and_cast<BlockMessage*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __BLOCKMESSAGE_M_H

